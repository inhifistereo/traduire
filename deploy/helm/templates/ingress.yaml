---
apiVersion: v1
kind: Secret
metadata:
  name: {{ print .Values.app_name "-apikey" }}
data:
    kongCredType: a2V5LWF1dGg=
    key: {{ .Values.kong_api_secret }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ print .Values.app_name "-ingress" }}
  annotations:
    kubernetes.io/ingress.class: kong
    konghq.com/protocols: "grpc,grpcs,https"
    konghq.com/plugins: {{ print .Values.app_name "-cors, httpbin-auth" }}
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls: 
  - secretName: {{ print .Values.kong_api_uri "-tls" | replace "." "-" }}
    hosts:
    - {{ .Values.kong_api_uri }}
  rules:
  - host: {{ .Values.kong_api_uri }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ print .Values.app_name "-svc" }}
            port: 
              number: {{ .Values.service_port }}
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: httpbin-auth
plugin: key-auth
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: {{ print .Values.app_name "-cors" }}
config: 
  origins:
  - {{ print .Values.frontend_uri }}
  methods:
  - GET
  - POST
  - PUT
  - PATCH
  - OPTIONS
  - CONNECT
  headers:
  - Accept
  - Accept-Version
  - Content-Length
  - Content-MD5
  - Content-Type
  - Date
  - X-Auth-Token
  exposed_headers:
  - X-Auth-Token
  credentials: true
  max_age: 3600
  preflight_continue: false
plugin: cors
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: {{ .Values.app_name }}
  annotations:
    kubernetes.io/ingress.class: kong
username: {{ .Values.app_name }}
credentials:
-  {{ print .Values.app_name "-apikey" }}
